using "core" from "Core"
using "file" from "Core"

function parseFile(name: str): Array
    decl file: any name "rb" fopen store file

    file 0 fseekend
    decl size: int file ftell store size
    file 0 fseekstart

    decl buf: str
    file size fread store buf
    buf "\n" strsplit return
end

function main(): none
    decl lines: Array
    "input.txt" parseFile store lines

    # Part 1
    decl prio: int 0 store prio
    decl linePrio: int 0 store linePrio
    foreach line in lines do
        # split lines in half
        decl len: int line strlen 2 / store len
        decl l1: str line strdup store l1
        decl l2: str line len + store l2

        decl l1end: any l1 len + store l1end
        0 store @l1end

        decl l1chars: Array l1 toChars store l1chars
        decl l2chars: Array l2 toChars store l2chars

        0 store linePrio

        foreach l1char in l1chars do
            foreach l2char in l2chars do
                l1char l2char == if
                    l1char 'a' >= l1char 'z' <= && if
                        # 1 + l1char - 'a'
                        l1char 'a' - 1 + linePrio + store linePrio
                    fi
                    l1char 'A' >= l1char 'Z' <= && if
                        l1char 'A' - 27 + linePrio + store linePrio
                    fi
                    goto next
                fi
            done
        done
        label next
        linePrio prio + store prio
    done
    "Priorities for Part 1: " prio longToString concat puts

    # Part 2

    0 store linePrio
    0 store prio

    for i in 0 to lines.count + 3 do
        decl b1: Array i 0 + lines:get toChars store b1
        decl b2: Array i 1 + lines:get toChars store b2
        decl b3: Array i 2 + lines:get toChars store b3
        
        0 store linePrio

        foreach b1item in b1 do
            foreach b2item in b2 do
                foreach b3item in b3 do
                    b1item b2item == b1item b3item == && if
                        b1item 'a' >= b1item 'z' <= && if
                            b1item 'a' - 1 + linePrio + store linePrio
                        fi
                        b1item 'A' >= b1item 'Z' <= && if
                            b1item 'A' - 27 + linePrio + store linePrio
                        fi
                        goto next2
                    fi
                done
            done
        done
        label next2
        linePrio prio + store prio
    done
    "Priorities for Part 2: " prio longToString concat puts
end
